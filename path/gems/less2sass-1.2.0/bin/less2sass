#!/usr/bin/env ruby
require 'optparse'
require_relative '../lib/less2sass'
require_relative '../lib/less2sass/version'

options = {}

option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: less2sass inputfile.less [additional input files] [options]"
  opts.banner += "\nSorry for the confusing name, but this actually converts less to scss\n\n"

  opts.on("-o", "--output FILE.scss", "name of outputfile (single file only)") do |o|
    options[:outputfile] = true
    options[:outputfilename] = o
  end

  opts.on("-d", "--delete", "delete inputfile after outputfile is created") do |d|
    options[:delete] = d
  end

  opts.on("-p", "--print", "output sass results to the terminal") do |p|
    options[:print] = p
  end

  opts.on("-v", "--version", "print less2sass version") do |v|
    options[:version] = v
  end
end

option_parser.parse!

if options[:version]
  puts "Version: #{Less2Sass::Version}"
  puts " "
end

if ARGV.size < 1
  puts option_parser.help
else
  input_file = ARGV[0]
  ARGV.each do |input_file|

    if input_file[-5, 5] == ".less"
      src = File.read input_file
      sass = Less2Sass.convert src

      if options[:print]
        puts "#{input_file}:" if ARGV.size > 1
        puts sass
        next unless options[:delete] || options[:outputfile]
      end

      if options[:outputfile] && options[:outputfilename][-5, 5] == ".scss" && ARGV.size == 1
        output_file = options[:outputfilename]
      else
        output_file = input_file.gsub(".less", ".scss")
      end

      File.open output_file, 'w' do |file|
        file << sass
      end

      if File.file?(output_file)
        puts "Done: #{output_file}"

        if options[:delete]
          File.delete(input_file)

          if File.file?(input_file) == false
            puts "Deleted: #{input_file}"
          else
            puts "Unable to delete: #{input_file}"
          end
        end
      end
    else
      puts "Error: #{input_file} is not a valid .less file"
      if ARGV.size == 1
        puts ""
        puts option_parser.help
        exit
      end
    end
  end
end
